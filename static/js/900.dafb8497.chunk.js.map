{"version":3,"file":"static/js/900.dafb8497.chunk.js","mappings":"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","sources":["webpack://itec/./src/pages/CurrentNews/Comments/Comment/Comment.module.scss?da9e","pages/CurrentNews/Comments/Comment/Comment.tsx","webpack://itec/./src/pages/CurrentNews/Comments/CommentForm/CommentForm.module.scss?8b37","pages/CurrentNews/Comments/CommentForm/CommentForm.tsx","webpack://itec/./src/pages/CurrentNews/Comments/Comments.module.scss?9deb","store/selectors/comments.ts","pages/CurrentNews/Comments/Comments.tsx","webpack://itec/./src/pages/CurrentNews/CurrentNews.module.scss?f778","webpack://itec/./src/pages/CurrentNews/NewsBody/NewsBody.module.scss?5b07","pages/CurrentNews/NewsBody/NewsBody.tsx","pages/CurrentNews/CurrentNews.tsx","store/selectors/current_news.ts"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Comment_container__pPR7b\",\"body\":\"Comment_body__DJDg-\"};","import { FC } from 'react'\n\nimport style from './Comment.module.scss'\n\nimport { DeleteButton } from 'components'\nimport { FIRST_DATE_ELEMENT, LAST_DATE_ELEMENT } from 'constants/constants'\nimport { CommentType } from 'store/types'\nimport { convertDateView } from 'utils/convert_date_view'\n\ntype CommentPropsType = {\n  comment: Omit<CommentType, 'news_id'>\n  deleteComment: (commentId: number) => void\n  isAdmin: boolean\n}\n\nexport const Comment: FC<CommentPropsType> = ({\n  comment: { author, date, text, id },\n  deleteComment,\n  isAdmin,\n}) => {\n  const correctDate = convertDateView(date.slice(FIRST_DATE_ELEMENT, LAST_DATE_ELEMENT))\n\n  return (\n    <div className={style.container}>\n      <img\n        alt=\"avatar\"\n        src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcR9lUdyFZOzGJGzdvnIXJ8y-Mmj9bSZ1AxqLQ&usqp=CAU\"\n      />\n      <div className={style.body}>\n        <div>\n          <h4>{author}</h4>\n          <span>{correctDate}</span>\n        </div>\n        <p>{text}</p>\n      </div>\n      {isAdmin && <DeleteButton name=\"удалить\" onClick={() => deleteComment(id)} />}\n    </div>\n  )\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"CommentForm_container__s5ylw\"};","import { FC, memo, useEffect, useState } from 'react'\n\nimport { SubmitHandler, useForm } from 'react-hook-form'\n\nimport style from './CommentForm.module.scss'\n\nimport { Button } from 'components'\nimport { COMMENT_AUTHOR_LENGTH, COMMENT_LENGTH } from 'constants/constants'\nimport { CommentType } from 'store/types'\n\nexport type CommentFormType = Pick<CommentType, 'author' | 'text'>\n\ntype CommentFormPropsType = {\n  postComment: (comment: CommentFormType) => void\n}\n\nexport const CommentForm: FC<CommentFormPropsType> = memo(({ postComment }) => {\n  const [isDisable, setIsDisable] = useState<boolean>(false)\n  const [buttonName, setButtonName] = useState<string>('отправить')\n\n  useEffect(() => {\n    setIsDisable(false)\n    setButtonName('отправить')\n  }, [postComment])\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<CommentFormType>({ mode: 'onChange' })\n\n  const onSubmit: SubmitHandler<CommentFormType> = data => {\n    setButtonName('спасибо за отзыв, после модерации комментарий будет опубликован')\n    setIsDisable(true)\n    postComment(data)\n  }\n\n  return (\n    <div className={style.container}>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div>\n          <input\n            {...register('author', {\n              required: { value: true, message: 'обяазаетельно поле' },\n              maxLength: {\n                value: COMMENT_AUTHOR_LENGTH,\n                message: `максимальная длинна:  ${COMMENT_AUTHOR_LENGTH} символов`,\n              },\n            })}\n            placeholder=\"ваше имя\"\n          />\n          <p>{errors.author?.message}</p>\n        </div>\n        <div>\n          <textarea\n            {...register('text', {\n              required: { value: true, message: 'обяазаетельно поле' },\n              maxLength: {\n                value: COMMENT_LENGTH,\n                message: `максимальная длинна:  ${COMMENT_LENGTH} символов`,\n              },\n            })}\n            placeholder=\"что думаете ?\"\n          />\n          <p>{errors.text?.message}</p>\n        </div>\n        <Button disabled={isDisable} name={buttonName} type=\"submit\" />\n      </form>\n    </div>\n  )\n})\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Comments_container__i3D9N\",\"body\":\"Comments_body__i7Hjf\"};","import { RootState } from 'store/store'\nimport { CommentType } from 'store/types'\n\nexport const selectCommentsNews = (state: RootState): CommentType[] =>\n  state.comments.comments\n","import { FC, memo, useCallback, useEffect } from 'react'\n\nimport { useSelector } from 'react-redux'\n\nimport { Comment } from './Comment/Comment'\nimport { CommentForm, CommentFormType } from './CommentForm/CommentForm'\nimport style from './Comments.module.scss'\n\nimport { FIRST_INDEX_NEWS } from 'constants/constants'\nimport { selectCommentsNews } from 'store/selectors'\nimport { selectIsLogin } from 'store/selectors/login'\nimport { useAppDispatch } from 'store/store'\nimport {\n  deleteCommentTC,\n  getCommentsNewsTC,\n  postCommentTC,\n} from 'store/thunks/comments_thunks'\n\ntype CommentsPropsType = {\n  newsId: number\n}\n\nexport const Comments: FC<CommentsPropsType> = memo(({ newsId }) => {\n  const dispatch = useAppDispatch()\n\n  const comments = useSelector(selectCommentsNews)\n  const isAdmin = useSelector(selectIsLogin)\n\n  useEffect(() => {\n    if (newsId === FIRST_INDEX_NEWS) return\n    dispatch(getCommentsNewsTC(newsId))\n  }, [newsId])\n\n  const deleteComment = useCallback(\n    (commentId: number) => {\n      dispatch(deleteCommentTC(commentId))\n    },\n    [dispatch],\n  )\n\n  const postComment = useCallback(\n    (comment: CommentFormType) => {\n      dispatch(postCommentTC({ ...comment, news_id: newsId }))\n    },\n    [dispatch, newsId],\n  )\n\n  return (\n    <div className={style.container}>\n      <h3>Комментарии:</h3>\n      <CommentForm postComment={postComment} />\n      <div className={style.body}>\n        {comments.map(comment => (\n          <Comment\n            key={comment.id}\n            comment={comment}\n            deleteComment={deleteComment}\n            isAdmin={isAdmin}\n          />\n        ))}\n      </div>\n    </div>\n  )\n})\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"CurrentNews_container__QfJfh\",\"bodyContainer\":\"CurrentNews_bodyContainer__-v-o5\",\"body\":\"CurrentNews_body__pbQ9X\",\"comments\":\"CurrentNews_comments__ULhmM\",\"footer\":\"CurrentNews_footer__9xiL2\",\"preview\":\"CurrentNews_preview__ThUKN\"};","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"NewsBody_container__gruYO\",\"header\":\"NewsBody_header__08emq\",\"date\":\"NewsBody_date__CAPOW\",\"body\":\"NewsBody_body__xO7Ko\",\"description\":\"NewsBody_description__-A+5u\"};","import { FC } from 'react'\n\nimport style from './NewsBody.module.scss'\n\nimport { NavLinkComponent } from 'components'\nimport { Path } from 'enums'\nimport { NewsBodyPropsType } from 'store/types/news_body_props_type'\nimport { convertDateView } from 'utils'\nimport { imageUrlHandle } from 'utils/image_url_handle'\n\nexport const NewsBody: FC<NewsBodyPropsType> = ({\n  news: {\n    date,\n    name,\n    subtitle_1: subtitle1,\n    image_1: image1,\n    full_text_1: fullText1,\n    full_text_3: fullText3,\n    subtitle_2: subtitle2,\n    full_text_2: fullText2,\n    image_2: image2,\n    image_3: image3,\n    subtitle_3: subtitle3,\n  },\n  isAdmin,\n}) => (\n  <div className={style.container}>\n    <div className={style.header}>\n      <div className={style.date}>{convertDateView(date)}</div>\n\n      <div>\n        <h1>{name}</h1>\n        {isAdmin && (\n          <NavLinkComponent nameButton=\"редактировать\" path={Path.CHANGE_NEWS} />\n        )}\n      </div>\n    </div>\n    <div className={style.body}>\n      <img alt=\"logo\" src={imageUrlHandle(image1)} />\n      <h3>{subtitle1}</h3>\n      <div className={style.description}>{fullText1}</div>\n    </div>\n    <div className={style.body}>\n      <h3>{subtitle2}</h3>\n      {image2 && <img alt=\"logo\" src={imageUrlHandle(image2)} />}\n      <div className={style.description}>{fullText2}</div>\n    </div>\n    <div className={style.body}>\n      <h3>{subtitle3}</h3>\n      {image3 && <img alt=\"logo\" src={imageUrlHandle(image3)} />}\n      <div className={style.description}>{fullText3}</div>\n    </div>\n  </div>\n)\n","import { FC, useEffect } from 'react'\n\nimport { useSelector } from 'react-redux'\n\nimport { Comments } from './Comments/Comments' // todo решить вопрос о их необходимости с Сергеем\nimport style from './CurrentNews.module.scss'\nimport { NewsBody } from './NewsBody/NewsBody'\n\nimport { Footer, MobileNavigation, Navigation, PopularNewsPreview } from 'components'\nimport { selectCurrentNews, selectPartSearchNews } from 'store/selectors'\nimport { selectIsLogin } from 'store/selectors/login'\nimport { useAppDispatch } from 'store/store'\nimport { addNewsViewsValueTC, getNewsByIdTC, getPopularNewsTC } from 'store/thunks'\n\nconst CurrentNews: FC = () => {\n  const dispatch = useAppDispatch()\n\n  const currentNews = useSelector(selectCurrentNews)\n\n  const popularNews = useSelector(selectPartSearchNews) // пока редьюсер свободен туда сетаются популярные новости\n  const isAdmin = useSelector(selectIsLogin)\n\n  useEffect(() => {\n    dispatch(getPopularNewsTC())\n  }, [])\n\n  const setCurrentNews = (newsId: number): void => {\n    const currentNewsItem = popularNews.find(item => item.id === newsId)\n\n    if (currentNewsItem) {\n      dispatch(getNewsByIdTC.fulfilled(currentNewsItem, '', currentNewsItem.id))\n    }\n\n    dispatch(addNewsViewsValueTC(newsId))\n  }\n\n  return (\n    <div className={style.container}>\n      <MobileNavigation />\n      <div className={style.bodyContainer}>\n        <Navigation />\n        <div className={style.body}>\n          <NewsBody news={currentNews} isAdmin={isAdmin} />\n          <PopularNewsPreview news={popularNews} setCurrentNews={setCurrentNews} />\n        </div>\n        <Comments newsId={currentNews.id} />\n        <Footer />\n      </div>\n    </div>\n  )\n}\n\nexport default CurrentNews\n","import { CURRENT_NEWS } from 'constants/constants'\nimport { RootState } from 'store/store'\nimport { NewsType } from 'store/types/news_type'\n\nexport const selectCurrentNews = (state: RootState): NewsType => {\n  if (!state.currentNews.currentNews.name) {\n    const currentNews = localStorage.getItem(CURRENT_NEWS)\n    if (currentNews) {\n      return JSON.parse(currentNews)\n    }\n  }\n  return state.currentNews.currentNews\n}\n"],"names":["Comment","comment","author","date","text","id","deleteComment","isAdmin","correctDate","convertDateView","slice","FIRST_DATE_ELEMENT","LAST_DATE_ELEMENT","className","style","alt","src","name","onClick","CommentForm","memo","postComment","useState","isDisable","setIsDisable","buttonName","setButtonName","useEffect","useForm","mode","register","handleSubmit","errors","formState","onSubmit","data","required","value","message","maxLength","COMMENT_AUTHOR_LENGTH","placeholder","COMMENT_LENGTH","disabled","type","selectCommentsNews","state","comments","Comments","newsId","dispatch","useAppDispatch","useSelector","selectIsLogin","FIRST_INDEX_NEWS","getCommentsNewsTC","useCallback","commentId","deleteCommentTC","postCommentTC","news_id","map","NewsBody","news","subtitle1","subtitle_1","image1","image_1","fullText1","full_text_1","fullText3","full_text_3","subtitle2","subtitle_2","fullText2","full_text_2","image2","image_2","image3","image_3","subtitle3","subtitle_3","nameButton","path","Path","imageUrlHandle","currentNews","selectCurrentNews","popularNews","selectPartSearchNews","getPopularNewsTC","setCurrentNews","currentNewsItem","find","item","getNewsByIdTC","addNewsViewsValueTC","localStorage","getItem","CURRENT_NEWS","JSON","parse"],"sourceRoot":""}