{"version":3,"file":"static/js/628.2e25cb4d.chunk.js","mappings":"2OAiGA,UAjFsB,WACpB,IAAMA,GAAWC,EAAAA,EAAAA,KACXC,GAAWC,EAAAA,EAAAA,MAEXC,GAAUC,EAAAA,EAAAA,IAAYC,EAAAA,IAE5BC,EAAAA,EAAAA,YAAU,WACJH,GACFF,EAASM,EAAAA,GAAAA,QAEV,CAACJ,IAEJ,OAIIK,EAAAA,EAAAA,MAHFC,EADF,EACEA,SACAC,EAFF,EAEEA,aACaC,EAHf,EAGEC,UAAaD,OAeTE,EAAiB,IAAIC,OAAOC,EAAAA,IAElC,OACE,iBAAKC,UAAWC,EAAAA,EAAAA,UAAhB,WACE,sDACA,iBAAKD,UAAWC,EAAAA,EAAAA,MAAhB,WACE,kBAAMC,SAAUR,GAlBwB,SAAAS,GAC5CpB,GAASqB,EAAAA,EAAAA,IAAYD,OAiBjB,WACE,4BACE,wCACA,oCACMV,EAAS,QAAS,CACpBY,SAAU,CAAEC,OAAO,EAAMC,QAAS,6BAFtC,IAIEC,KAAK,QACLC,aAAa,2BAEdd,EAAOe,QAAS,iBAAMV,UAAWC,EAAAA,EAAAA,MAAjB,SAA+BN,EAAOe,MAAMH,cAE/D,4BACE,2CACA,oCACMd,EAAS,WAAY,CACvBY,SAAU,CACRC,OAAO,EACPC,QAAS,0BAEXI,QAAS,CACPL,MAAOT,EACPU,QACE,wiBATR,IAYEE,aAAa,cACbD,KAAK,cAENb,EAAOiB,WACN,iBAAMZ,UAAWC,EAAAA,EAAAA,MAAjB,SAA+BN,EAAOiB,SAASL,cAGnD,iBAAKP,UAAWC,EAAAA,EAAAA,QAAhB,WACE,SAAC,KAAD,CAAQY,KAAK,yDAAYL,KAAK,YAC9B,SAAC,KAAD,CAAQK,KAAK,uFAIjB,SAAC,KAAD,CAAQA,KAAK,+GAAqBC,QArDP,WAC/B7B,EAASM,EAAAA,GAAAA","sources":["pages/LoginPage/LoginPage.tsx"],"sourcesContent":["import { FC, useEffect } from 'react'\n\nimport { SubmitHandler, useForm } from 'react-hook-form'\nimport { useSelector } from 'react-redux'\nimport { useNavigate } from 'react-router-dom'\n\nimport style from './LoginPage.module.scss'\n\nimport { Button } from 'components'\nimport { PASSWORD_VALIDATE_REG_EXP } from 'constants/constants'\nimport { Path } from 'enums'\nimport { selectIsLogin } from 'store/selectors/login'\nimport { useAppDispatch } from 'store/store'\nimport { postLoginTC } from 'store/thunks/login_thunks'\nimport { UserDataType } from 'store/types/user_data_type'\n\nconst LoginPage: FC = () => {\n  const dispatch = useAppDispatch()\n  const navigate = useNavigate()\n\n  const isLogin = useSelector(selectIsLogin)\n\n  useEffect(() => {\n    if (isLogin) {\n      navigate(Path.MAIN)\n    }\n  }, [isLogin])\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<UserDataType>()\n\n  const onSubmit: SubmitHandler<UserDataType> = userData => {\n    dispatch(postLoginTC(userData))\n  }\n\n  const navigateRegistrationPage = (): void => {\n    navigate(Path.REGISTRATION)\n  }\n\n  const navigateEditPasswordPage = (): void => {\n    navigate(Path.EDIT_PASSWORD)\n  }\n\n  const passwordRegExp = new RegExp(PASSWORD_VALIDATE_REG_EXP)\n\n  return (\n    <div className={style.container}>\n      <h1>Вход</h1>\n      <div className={style.block}>\n        <form onSubmit={handleSubmit(onSubmit)}>\n          <div>\n            <label>LOGIN: </label>\n            <input\n              {...register('email', {\n                required: { value: true, message: 'This field is required' },\n              })}\n              type=\"email\"\n              defaultValue=\"AndrewGaity@yandex.by\"\n            />\n            {errors.email && <span className={style.error}>{errors.email.message}</span>}\n          </div>\n          <div>\n            <label>PASSWORD: </label>\n            <input\n              {...register('password', {\n                required: {\n                  value: true,\n                  message: 'This field is required',\n                },\n                pattern: {\n                  value: passwordRegExp,\n                  message:\n                    'пароль должен быть длинной от 8 до 15, содержать хотя бы одну цифру, заглавную, прописную букву и спецсимвол: !@#$%^&*()',\n                },\n              })}\n              defaultValue=\"12345678Aa%\"\n              type=\"password\"\n            />\n            {errors.password && (\n              <span className={style.error}>{errors.password.message}</span>\n            )}\n          </div>\n          <div className={style.buttons}>\n            <Button name=\"отправить\" type=\"submit\" />\n            <Button name=\"забыли пароль ?\" />\n            {/* <Button name=\"смена пароля\" onClick={navigateEditPasswordPage} /> */}\n          </div>\n        </form>\n        <Button name=\"зарегистрироваться\" onClick={navigateRegistrationPage} />\n      </div>\n    </div>\n  )\n}\n\nexport default LoginPage\n"],"names":["dispatch","useAppDispatch","navigate","useNavigate","isLogin","useSelector","selectIsLogin","useEffect","Path","useForm","register","handleSubmit","errors","formState","passwordRegExp","RegExp","PASSWORD_VALIDATE_REG_EXP","className","style","onSubmit","userData","postLoginTC","required","value","message","type","defaultValue","email","pattern","password","name","onClick"],"sourceRoot":""}