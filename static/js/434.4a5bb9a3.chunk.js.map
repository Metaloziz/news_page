{"version":3,"file":"static/js/434.4a5bb9a3.chunk.js","mappings":"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","sources":["store/thunks/current_news_thunks.ts","pages/ChangeNewsPage/ChangeNewsPage.tsx","webpack://itec/./src/pages/CreateNewsPage/NewsBodyForm/NewsBodyForm.module.scss?a718","pages/CreateNewsPage/NewsBodyForm/NewsBodyForm.tsx","pages/CreateNewsPage/SelectOptions/SelectOptions.tsx","store/selectors/current_news.ts","webpack://itec/./src/pages/CreateNewsPage/CreateNewsPage.module.scss?c58c"],"sourcesContent":["import { createAsyncThunk } from '@reduxjs/toolkit'\n\nimport { NewsPayloadType, newsRequests } from 'api'\nimport { StatusCode } from 'enums'\nimport { setIsLoadingStatusAC } from 'store/reducers'\nimport { RootState } from 'store/store'\nimport { getNewsByIdTC } from 'store/thunks/news_thunks'\nimport { ResponseErrorType } from 'store/types'\nimport { setThunkError } from 'utils'\n\nexport const updateNewsTC = createAsyncThunk(\n  'current_news/updateNewsTC',\n  async (news: NewsPayloadType, { dispatch, getState }) => {\n    const {\n      currentNews: { currentNews },\n      login: { token },\n    } = getState() as RootState\n\n    try {\n      dispatch(setIsLoadingStatusAC(true))\n      const { status } = await newsRequests.updateNews(news, currentNews.id, token)\n      if (status === StatusCode.UPDATE_NEWS_SUCCESS) {\n        dispatch(\n          getNewsByIdTC.fulfilled({ ...currentNews, ...news.body }, '', currentNews.id),\n        )\n      }\n    } catch (error) {\n      setThunkError(dispatch, error as ResponseErrorType)\n    } finally {\n      dispatch(setIsLoadingStatusAC(false))\n    }\n  },\n)\n","import { FC } from 'react'\n\nimport { SubmitHandler, useForm } from 'react-hook-form'\nimport { useSelector } from 'react-redux'\n\nimport { Button, NavLinkComponent } from 'components'\nimport { Path } from 'enums/enums'\nimport style from 'pages/CreateNewsPage/CreateNewsPage.module.scss'\nimport { NewsBodyForm } from 'pages/CreateNewsPage/NewsBodyForm/NewsBodyForm'\nimport { SelectOptions } from 'pages/CreateNewsPage/SelectOptions/SelectOptions'\nimport { selectCurrentNews, selectSections } from 'store/selectors'\nimport { useAppDispatch } from 'store/store'\nimport { updateNewsTC } from 'store/thunks/current_news_thunks'\nimport { FormType } from 'store/types'\nimport { todayDate } from 'utils/today_date'\n\nconst ChangeNewsPage: FC = () => {\n  const dispatch = useAppDispatch()\n\n  const sections = useSelector(selectSections)\n  const news = useSelector(selectCurrentNews)\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<FormType>({ mode: 'onChange' })\n\n  const onSubmit: SubmitHandler<FormType> = data => {\n    data.section = Number(data.section)\n\n    const { file, ...body } = data\n\n    dispatch(updateNewsTC({ body, file }))\n  }\n\n  return (\n    <div className={style.container}>\n      <NavLinkComponent nameButton=\"обратно к новости\" path={Path.CURRENT_NEWS} />\n      <span>Создать новость:</span>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className={style.header}>\n          <div>\n            <label>date </label>\n            <input {...register('date')} placeholder=\"date\" value={todayDate()} />\n            {errors.date && <span>This field is required</span>}\n          </div>\n          <div>\n            <label htmlFor=\"section\">section </label>\n            <select id=\"section\" defaultValue={news.section} {...register('section')}>\n              <SelectOptions data={sections} />\n            </select>\n          </div>\n        </div>\n        <div className={style.name}>\n          <label>name </label>\n          <input\n            {...register('name')}\n            placeholder=\"name\"\n            required\n            defaultValue={news.name}\n          />\n          {errors.name && <span>This field is required</span>}\n        </div>\n        <NewsBodyForm\n          defaultValues={news}\n          useFormRegisterReturn={register('subtitle_1')}\n          useFormRegisterReturn1={register('full_text_1')}\n          useFormRegisterReturn2={register('image_1')}\n          errors={errors}\n        />\n        {news.subtitle_2 && (\n          <NewsBodyForm\n            defaultValues={news}\n            useFormRegisterReturn={register('subtitle_2')}\n            useFormRegisterReturn1={register('full_text_2')}\n            useFormRegisterReturn2={register('image_2')}\n            errors={errors}\n          />\n        )}\n        {news.subtitle_3 && (\n          <NewsBodyForm\n            defaultValues={news}\n            useFormRegisterReturn={register('subtitle_3')}\n            useFormRegisterReturn1={register('full_text_3')}\n            useFormRegisterReturn2={register('image_3')}\n            errors={errors}\n          />\n        )}\n        <Button name=\"отправить\" type=\"submit\" />\n      </form>\n    </div>\n  )\n}\n\nexport default ChangeNewsPage\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"NewsBodyForm_container__WAFXJ\",\"subtitle\":\"NewsBodyForm_subtitle__+cJdX\",\"text\":\"NewsBodyForm_text__dCpxo\",\"image\":\"NewsBodyForm_image__SjCcP\"};","import { FC } from 'react'\n\nimport { FieldErrors, UseFormRegisterReturn } from 'react-hook-form'\n\nimport style from './NewsBodyForm.module.scss'\n\nimport { NewsBodyType, NewsFileType } from 'store/types'\n\ntype DefaultValuesFormBlockType = {\n  [key: string]: string | number\n}\n\ntype NewsBodyFormPropsType = {\n  defaultValues?: DefaultValuesFormBlockType\n  useFormRegisterReturn: UseFormRegisterReturn\n  errors: FieldErrors<NewsBodyType & NewsFileType>\n  useFormRegisterReturn1: UseFormRegisterReturn\n  useFormRegisterReturn2: UseFormRegisterReturn\n  useFormRegisterReturn3?: UseFormRegisterReturn\n}\n\nexport const NewsBodyForm: FC<NewsBodyFormPropsType> = props => {\n  const setDefaultValue = (str: string): string | number => {\n    const obj = props.defaultValues as DefaultValuesFormBlockType\n\n    if (props.defaultValues) {\n      return obj[`${str}`]\n    }\n\n    return ''\n  }\n\n  return (\n    <div className={style.container}>\n      <div className={style.subtitle}>\n        <label>Подзаголовок</label>\n        <input\n          {...props.useFormRegisterReturn}\n          placeholder=\"Подзаголовок\"\n          required\n          defaultValue={setDefaultValue(props.useFormRegisterReturn.name)}\n        />\n      </div>\n\n      <div className={style.text}>\n        <label>Текст</label>\n        <textarea\n          {...props.useFormRegisterReturn1}\n          placeholder=\"основной текст блока\"\n          required\n          rows={5}\n          defaultValue={setDefaultValue(props.useFormRegisterReturn1.name)}\n        />\n      </div>\n      <div className={style.image}>\n        <label>Ссылка на картинку из интернета</label>\n        <input\n          {...props.useFormRegisterReturn2}\n          placeholder=\"https://www.ixbt.com/img.jpg\"\n          defaultValue={setDefaultValue(props.useFormRegisterReturn2.name)}\n        />\n      </div>\n      {props.useFormRegisterReturn3 && (\n        <div>\n          <label>file </label>\n          <input {...props.useFormRegisterReturn3} type=\"file\" multiple />\n        </div>\n      )}\n    </div>\n  )\n}\n","import { FC } from 'react'\n\nimport { SectionType } from 'store/types'\n\ntype SectionSelectorPropsType = {\n  data: SectionType[]\n}\n\nexport const SelectOptions: FC<SectionSelectorPropsType> = ({ data }) => (\n  <>\n    {data.map(({ name, id }) => (\n      <option key={id} value={id}>\n        {id} - {name}\n      </option>\n    ))}\n  </>\n)\n","import { CURRENT_NEWS } from 'constants/constants'\nimport { RootState } from 'store/store'\nimport { NewsType } from 'store/types/news_type'\n\nexport const selectCurrentNews = (state: RootState): NewsType => {\n  if (!state.currentNews.currentNews.name) {\n    const currentNews = localStorage.getItem(CURRENT_NEWS)\n    if (currentNews) {\n      return JSON.parse(currentNews)\n    }\n  }\n  return state.currentNews.currentNews\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"CreateNewsPage_container__WV5Vz\",\"header\":\"CreateNewsPage_header__s7+vC\",\"date\":\"CreateNewsPage_date__Af00j\",\"sections\":\"CreateNewsPage_sections__a9elK\",\"name\":\"CreateNewsPage_name__Y6tkj\",\"blockTitle\":\"CreateNewsPage_blockTitle__Dnqyl\"};"],"names":["updateNewsTC","createAsyncThunk","news","dispatch","getState","currentNews","token","login","setIsLoadingStatusAC","newsRequests","id","status","StatusCode","getNewsByIdTC","body","setThunkError","useAppDispatch","sections","useSelector","selectSections","selectCurrentNews","useForm","mode","register","handleSubmit","errors","formState","className","style","nameButton","path","Path","onSubmit","data","section","Number","file","placeholder","value","todayDate","date","htmlFor","defaultValue","SelectOptions","required","name","NewsBodyForm","defaultValues","useFormRegisterReturn","useFormRegisterReturn1","useFormRegisterReturn2","subtitle_2","subtitle_3","type","props","setDefaultValue","str","obj","rows","useFormRegisterReturn3","multiple","map","state","localStorage","getItem","CURRENT_NEWS","JSON","parse"],"sourceRoot":""}