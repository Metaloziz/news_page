{"version":3,"file":"static/js/410.e2eee356.chunk.js","mappings":"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","sources":["pages/CreateNewsPage/CreateNewsPage.tsx","webpack://itec/./src/pages/CreateNewsPage/NewsBodyForm/NewsBodyForm.module.scss?a718","pages/CreateNewsPage/NewsBodyForm/NewsBodyForm.tsx","pages/CreateNewsPage/SelectOptions/SelectOptions.tsx","webpack://itec/./src/pages/CreateNewsPage/CreateNewsPage.module.scss?c58c"],"sourcesContent":["import { FC, useState } from 'react'\n\nimport { SubmitHandler, useForm } from 'react-hook-form'\nimport { useSelector } from 'react-redux'\n\nimport style from './CreateNewsPage.module.scss'\nimport { NewsBodyForm } from './NewsBodyForm/NewsBodyForm'\nimport { SelectOptions } from './SelectOptions/SelectOptions'\n\nimport { BlockCheckbox, Button, NavLinkComponent } from 'components'\nimport { Path } from 'enums'\nimport { selectSections } from 'store/selectors'\nimport { useAppDispatch } from 'store/store'\nimport { postNewsTC } from 'store/thunks'\nimport { FormType } from 'store/types'\nimport { todayDate } from 'utils'\n\nconst CreateNewsPage: FC = () => {\n  const dispatch = useAppDispatch()\n\n  const sections = useSelector(selectSections)\n\n  const [isActiveSecondBlock, setIsActiveSecondBlock] = useState(false)\n  const [isActiveThirdBlock, setIsActiveThirdBlock] = useState(false)\n\n  const {\n    register,\n    handleSubmit,\n    formState: { errors },\n  } = useForm<FormType>()\n\n  const onSubmit: SubmitHandler<FormType> = data => {\n    data.section = Number(data.section)\n\n    const { file, ...body } = data\n\n    dispatch(postNewsTC({ body, file }))\n  }\n\n  const viewSecondBlockHandel = (): void => {\n    setIsActiveSecondBlock(!isActiveSecondBlock)\n  }\n\n  const viewThirdBlockHandel = (): void => {\n    setIsActiveThirdBlock(!isActiveThirdBlock)\n  }\n\n  return (\n    <div className={style.container}>\n      <NavLinkComponent nameButton=\"на главную\" path={Path.MAIN} />\n      <h2>Добавьте новость</h2>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <div className={style.header}>\n          <div className={style.date}>\n            <label>Дата</label>\n            <input {...register('date')} placeholder=\"date\" value={todayDate()} />\n          </div>\n          <div className={style.sections}>\n            <label htmlFor=\"section\">Section</label>\n            <select id=\"section\" defaultValue={1} {...register('section')}>\n              <SelectOptions data={sections} />\n            </select>\n          </div>\n        </div>\n        <div className={style.name}>\n          <label>Главный заголовок статьи</label>\n          <input {...register('name')} placeholder=\"name\" required defaultValue=\"title\" />\n        </div>\n\n        <h3>Блок 1</h3>\n        <NewsBodyForm\n          useFormRegisterReturn={register('subtitle_1')}\n          useFormRegisterReturn1={register('full_text_1')}\n          useFormRegisterReturn2={register('image_1')}\n          useFormRegisterReturn3={register('file')}\n          errors={errors}\n        />\n\n        <div className={style.blockTitle}>\n          <h3>Блок 2</h3>\n          <BlockCheckbox checked={isActiveSecondBlock} onChange={viewSecondBlockHandel} />\n        </div>\n        {isActiveSecondBlock && (\n          <NewsBodyForm\n            useFormRegisterReturn={register('subtitle_2')}\n            useFormRegisterReturn1={register('full_text_2')}\n            useFormRegisterReturn2={register('image_2')}\n            useFormRegisterReturn3={register('file')}\n            errors={errors}\n          />\n        )}\n        <div className={style.blockTitle}>\n          <h3>Блок 3</h3>\n          <BlockCheckbox checked={isActiveThirdBlock} onChange={viewThirdBlockHandel} />\n        </div>\n        {isActiveThirdBlock && (\n          <NewsBodyForm\n            useFormRegisterReturn={register('subtitle_3')}\n            useFormRegisterReturn1={register('full_text_3')}\n            useFormRegisterReturn2={register('image_3')}\n            useFormRegisterReturn3={register('file')}\n            errors={errors}\n          />\n        )}\n\n        <Button name=\"отправить\" type=\"submit\" />\n      </form>\n      <NavLinkComponent nameButton=\"ПОСМОТРЕТЬ РЕЗУЛЬТАТ\" path={Path.CURRENT_NEWS} />\n    </div>\n  )\n}\n\nexport default CreateNewsPage\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"NewsBodyForm_container__GBOCd\",\"subtitle\":\"NewsBodyForm_subtitle__ELcMI\",\"text\":\"NewsBodyForm_text__zoDUb\",\"image\":\"NewsBodyForm_image__DDuAu\"};","import { FC } from 'react'\n\nimport { FieldErrors, UseFormRegisterReturn } from 'react-hook-form'\n\nimport style from './NewsBodyForm.module.scss'\n\nimport { NewsBodyType, NewsFileType } from 'store/types'\n\ntype DefaultValuesFormBlockType = {\n  [key: string]: string | number\n}\n\ntype NewsBodyFormPropsType = {\n  defaultValues?: DefaultValuesFormBlockType\n  useFormRegisterReturn: UseFormRegisterReturn\n  errors: FieldErrors<NewsBodyType & NewsFileType>\n  useFormRegisterReturn1: UseFormRegisterReturn\n  useFormRegisterReturn2: UseFormRegisterReturn\n  useFormRegisterReturn3?: UseFormRegisterReturn\n}\n\nexport const NewsBodyForm: FC<NewsBodyFormPropsType> = props => {\n  const setDefaultValue = (str: string): string | number => {\n    const obj = props.defaultValues as DefaultValuesFormBlockType\n\n    if (props.defaultValues) {\n      return obj[`${str}`]\n    }\n\n    return ''\n  }\n\n  return (\n    <div className={style.container}>\n      <div className={style.subtitle}>\n        <label>Подзаголовок</label>\n        <input\n          {...props.useFormRegisterReturn}\n          placeholder=\"Подзаголовок\"\n          required\n          defaultValue={setDefaultValue(props.useFormRegisterReturn.name)}\n        />\n      </div>\n\n      <div className={style.text}>\n        <label>Текст</label>\n        <textarea\n          {...props.useFormRegisterReturn1}\n          placeholder=\"основной текст блока\"\n          required\n          rows={5}\n          defaultValue={setDefaultValue(props.useFormRegisterReturn1.name)}\n        />\n      </div>\n      <div className={style.image}>\n        <label>Ссылка на картинку из интернета</label>\n        <input\n          {...props.useFormRegisterReturn2}\n          placeholder=\"https://www.ixbt.com/img.jpg\"\n          defaultValue={setDefaultValue(props.useFormRegisterReturn2.name)}\n        />\n      </div>\n      {props.useFormRegisterReturn3 && (\n        <div>\n          <label>file </label>\n          <input {...props.useFormRegisterReturn3} type=\"file\" multiple />\n        </div>\n      )}\n    </div>\n  )\n}\n","import { FC } from 'react'\n\nimport { SectionType } from 'store/types'\n\ntype SectionSelectorPropsType = {\n  data: SectionType[]\n}\n\nexport const SelectOptions: FC<SectionSelectorPropsType> = ({ data }) => (\n  <>\n    {data.map(({ name, id }) => (\n      <option key={id} value={id}>\n        {id} - {name}\n      </option>\n    ))}\n  </>\n)\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"CreateNewsPage_container__EpqUF\",\"header\":\"CreateNewsPage_header__sMQwT\",\"date\":\"CreateNewsPage_date__1Dr7y\",\"sections\":\"CreateNewsPage_sections__8njs9\",\"name\":\"CreateNewsPage_name__7MO3J\",\"blockTitle\":\"CreateNewsPage_blockTitle__gIQdJ\"};"],"names":["dispatch","useAppDispatch","sections","useSelector","selectSections","useState","isActiveSecondBlock","setIsActiveSecondBlock","isActiveThirdBlock","setIsActiveThirdBlock","useForm","register","handleSubmit","errors","formState","className","style","nameButton","path","Path","onSubmit","data","section","Number","file","body","postNewsTC","placeholder","value","todayDate","htmlFor","id","defaultValue","required","useFormRegisterReturn","useFormRegisterReturn1","useFormRegisterReturn2","useFormRegisterReturn3","checked","onChange","name","type","NewsBodyForm","props","setDefaultValue","str","obj","defaultValues","rows","multiple","SelectOptions","map"],"sourceRoot":""}